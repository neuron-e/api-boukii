name: Backend CI

on:
  push:
    paths-ignore: ['front/**','front-legacy/**']
  pull_request:
    paths-ignore: ['front/**','front-legacy/**']

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          extensions: sqlite, pdo_sqlite, mbstring, exif, pcntl, bcmath, intl, pdo_mysql
          coverage: none
          ini-values: memory_limit=1024M

      - name: Prepare environment files
        run: |
          cp .env.example .env
          cat .env.ci.sqlite >> .env
          sed -i "s|^DB_DATABASE=.*|DB_DATABASE=$GITHUB_WORKSPACE/database/database.sqlite|" .env
          echo "APP_ENV=testing" >> .env
          echo "CACHE_DRIVER=file" >> .env
          echo "SESSION_DRIVER=file" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          cp .env .env.testing
          sed -i "s|CACHE_DRIVER=file|CACHE_DRIVER=array|" .env.testing
          sed -i "s|SESSION_DRIVER=file|SESSION_DRIVER=array|" .env.testing
          echo "LOG_CHANNEL=stack" >> .env.testing
          mkdir -p database
          touch database/database.sqlite

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Generate app key
        run: php artisan key:generate

      - name: Prepare DB file
        run: |
          mkdir -p database
          rm -f database/database.sqlite
          touch database/database.sqlite

      - name: Fresh migrate
        run: php artisan migrate:fresh --force

      - name: Seed minimal CI data
        run: php artisan db:seed --force --class=CiSmokeSeeder || true

      - name: Config cache clear (ensure env is read)
        run: php artisan config:clear

      - name: PHP lint (syntax)
        run: |
          find app bootstrap config database routes tests -name "*.php" -print0 | xargs -0 -n1 -I{} php -l {}

      - name: DB smoke (tinker)
        run: |
          php -r "require 'vendor/autoload.php'; \$app=require 'bootstrap/app.php'; \$kernel=\$app->make(Illuminate\\Contracts\\Console\\Kernel::class); \$kernel->bootstrap(); echo DB::table('users')->count();"

      - name: PHPUnit CI suite (smoke)
        env:
          APP_ENV: testing
          DB_CONNECTION: sqlite
          DB_DATABASE: ${{ github.workspace }}/database/database.sqlite
          CACHE_DRIVER: array
          QUEUE_CONNECTION: sync
          SESSION_DRIVER: array
        run: |
          mkdir -p test-reports
          php -d memory_limit=1024M -d zend.assertions=-1 vendor/bin/phpunit -c phpunit.ci.xml --testsuite=Ci --log-junit test-reports/phpunit.xml

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: test-reports/phpunit.xml

      # Full PHPUnit suite temporarily disabled. Re-enable in fix/backend-tests
      # - name: PHPUnit full suite
      #   run: php -d memory_limit=2048M -d zend.assertions=-1 artisan test --no-coverage

      - name: PHPStan (Larastan)
        if: ${{ hashFiles('**/vendor/bin/phpstan') != '' }}
        run: vendor/bin/phpstan analyse --no-progress --memory-limit=1G

  phpunit-full:
    if: contains(github.event.pull_request.labels.*.name, 'run-full-suite')
    needs: backend
    runs-on: ubuntu-latest
    continue-on-error: true
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: boukii_v5
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          extensions: sqlite, pdo_sqlite, mbstring, exif, pcntl, bcmath, intl, pdo_mysql
          coverage: none
          ini-values: memory_limit=1024M

      - name: Prepare environment files
        run: |
          cp .env.example .env
          cat .env.ci.mysql >> .env
          echo "APP_ENV=testing" >> .env
          echo "CACHE_DRIVER=file" >> .env
          echo "SESSION_DRIVER=file" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          cp .env .env.testing
          sed -i "s|CACHE_DRIVER=file|CACHE_DRIVER=array|" .env.testing
          sed -i "s|SESSION_DRIVER=file|SESSION_DRIVER=array|" .env.testing
          echo "LOG_CHANNEL=stack" >> .env.testing

      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Generate app key
        run: php artisan key:generate

      - name: Load MySQL schema
        run: mysql -h 127.0.0.1 -P 3306 -u root -proot boukii_v5 < database/schema/mysql/schema.sql

      - name: Run incremental migrations
        run: php artisan migrate --force || true

      - name: Config cache clear (ensure env is read)
        run: php artisan config:clear

      - name: PHPUnit full suite
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_DATABASE: boukii_v5
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USERNAME: root
          DB_PASSWORD: root
          CACHE_DRIVER: array
          QUEUE_CONNECTION: sync
          SESSION_DRIVER: array
        run: vendor/bin/phpunit -c phpunit.mysql.xml --no-coverage --testsuite=Full


