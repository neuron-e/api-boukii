openapi: 3.0.3
info:
  title: Boukii API V5
  version: '1.0'
paths:
  /api/v5/auth/check-user:
    post:
      summary: Verify user credentials and list available schools
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Credentials verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      schools:
                        type: array
                        items:
                          $ref: '#/components/schemas/School'
                      requires_school_selection:
                        type: boolean
                      temp_token:
                        type: string
  /api/v5/auth/select-school:
    post:
      summary: Select a school and obtain an access token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [school_id]
              properties:
                school_id:
                  type: integer
      responses:
        '200':
          description: School selected
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                      user:
                        $ref: '#/components/schemas/User'
                      school:
                        $ref: '#/components/schemas/School'
                      season:
                        $ref: '#/components/schemas/Season'
                      requires_season_selection:
                        type: boolean
  /api/v5/auth/select-season:
    post:
      summary: Select a season to complete authentication
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [season_id]
              properties:
                season_id:
                  type: integer
      responses:
        '200':
          description: Season selected
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                      token_type:
                        type: string
                      expires_at:
                        type: string
                        format: date-time
                        nullable: true
                      user:
                        $ref: '#/components/schemas/User'
                      school:
                        $ref: '#/components/schemas/School'
                      season:
                        $ref: '#/components/schemas/Season'
  /api/v5/me/schools:
    get:
      summary: List schools visible to the authenticated user
      tags: [Schools]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
            minimum: 1
            default: 15
          description: Items per page
        - in: query
          name: all
          schema:
            type: boolean
            default: false
          description: Return all schools without pagination
      responses:
        '200':
          description: Paginated list of schools
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/School'
              examples:
                success:
                  value:
                    data:
                      - id: 1
                        name: Example School
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                forbidden:
                  $ref: '#/components/examples/Forbidden'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                notFound:
                  $ref: '#/components/examples/NotFound'
        '422':
          description: Validation failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                validationFailed:
                  $ref: '#/components/examples/ValidationFailed'
  /api/v5/context:
    get:
      summary: Get current user context
      tags: [Context]
      responses:
        '200':
          description: Current context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContext'
              examples:
                success:
                  value:
                    school_id: 1
                    season_id: null
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                forbidden:
                  $ref: '#/components/examples/Forbidden'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                notFound:
                  $ref: '#/components/examples/NotFound'
        '422':
          description: Validation failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                validationFailed:
                  $ref: '#/components/examples/ValidationFailed'
  /api/v5/context/school:
    post:
      summary: Switch current school
      tags: [Context]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - school_id
              properties:
                school_id:
                  type: integer
      responses:
        '200':
          description: Updated context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContext'
              examples:
                success:
                  value:
                    school_id: 1
                    season_id: null
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                forbidden:
                  $ref: '#/components/examples/Forbidden'
        '404':
          description: School not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                notFound:
                  $ref: '#/components/examples/NotFound'
        '422':
          description: Validation failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                validationFailed:
                  $ref: '#/components/examples/ValidationFailed'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
    School:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
    UserContext:
      type: object
      properties:
        school_id:
          type: integer
          nullable: true
        season_id:
          type: integer
          nullable: true
    Season:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        is_active:
          type: boolean
    ProblemDetails:
      type: object
      required:
        - type
        - title
        - status
        - detail
      properties:
        type:
          type: string
          example: about:blank
        title:
          type: string
          example: Error
        status:
          type: integer
          example: 400
        detail:
          type: string
          example: Error details
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Validation errors
  examples:
    Forbidden:
      value:
        type: about:blank
        title: Forbidden
        status: 403
        detail: This action is unauthorized.
    NotFound:
      value:
        type: about:blank
        title: Not Found
        status: 404
        detail: School not found
    ValidationFailed:
      value:
        type: about:blank
        title: Unprocessable Content
        status: 422
        detail: Validation failed
        errors:
          school_id:
            - The school_id field is required.
