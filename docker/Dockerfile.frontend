# Multi-stage build para V5 y Legacy
FROM node:18-alpine as base

WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Build V5 (Principal)
FROM node:18-alpine as build-v5
WORKDIR /app
COPY front/package*.json ./
RUN npm ci
COPY front/ ./
RUN npm run build --configuration=production

# Build Legacy (Fallback)
FROM node:18-alpine as build-legacy
WORKDIR /app
COPY front-legacy/package*.json ./
RUN npm ci
COPY front-legacy/ ./
RUN npm run build --configuration=production

# Nginx final stage
FROM nginx:alpine
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/frontend.conf /etc/nginx/conf.d/default.conf

# Copy built applications
COPY --from=build-v5 /app/dist /usr/share/nginx/html
COPY --from=build-legacy /app/dist /usr/share/nginx/html/legacy

# Copy feature flag detection script
COPY docker/feature-flag-check.js /usr/share/nginx/html/feature-flag-check.js

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]